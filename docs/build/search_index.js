var documenterSearchIndex = {"docs":
[{"location":"api/#LimberJack.jl","page":"API","title":"LimberJack.jl","text":"","category":"section"},{"location":"api/#Core","page":"API","title":"Core","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"LimberJack.Settings\nLimberJack.CosmoPar\nLimberJack.Cosmology\nLimberJack.Ez\nLimberJack.Hmpc\nLimberJack.comoving_radial_distance\nLimberJack.growth_factor\nLimberJack.lin_Pk\nLimberJack.nonlin_Pk","category":"page"},{"location":"api/#LimberJack.Settings","page":"API","title":"LimberJack.Settings","text":"Settings(cosmo_type, nz, nz_pk, nk, tk_mode, pk_mode, custom_Dz)\n\nCosmology constructor settings structure. \n\nArguments:\n\ncosmo_type::Type : type of cosmological parameters. \nnz::Int : number of nodes in the general redshift array.\nnz_pk::Int : number of nodes in the redshift array used for matter power spectrum.\nnk::Int: number of nodes in the matter power spectrum.\ntk_mode::String : choice of transfer function.\nPk_mode::String : choice of matter power spectrum.\ncustom_Dz::Any : custom growth factor.\n\nReturns:\n\nSettings : cosmology settings.\n\n\n\n\n\n","category":"type"},{"location":"api/#LimberJack.CosmoPar","page":"API","title":"LimberJack.CosmoPar","text":"CosmoPar(Ωm, Ωb, h, n_s, σ8, θCMB, Ωr, ΩΛ)\n\nCosmology parameters structure.  \n\nArguments:\n\nΩm::Dual : cosmological matter density. \nΩb::Dual : cosmological baryonic density.\nh::Dual : reduced Hubble parameter.\nn_s::Dual : spectral index.\nσ8::Dual: variance of the matter density field in a sphere of 8 Mpc.\nθCMB::Dual : CMB temperature.\nΩr::Dual : cosmological radiation density.\nΩΛ::Dual : cosmological dark energy density.\n\nReturns:\n\nCosmoPar : cosmology parameters structure.\n\n\n\n\n\n","category":"type"},{"location":"api/#LimberJack.Cosmology","page":"API","title":"LimberJack.Cosmology","text":"Cosmology(Settings, CosmoPar,\n          ks, pk0, logk, dlogk,\n          zs, chi, z_of_chi, chi_max, chi_LSS, Dz, PkLz0, Pk)\n\nBase cosmology structure.  \n\nArguments:\n\nSettings::MutableStructure : cosmology constructure settings. \nCosmoPar::Structure : cosmological parameters.\nks::Dual : scales array.\npk0::Dual: primordial matter power spectrum.\nlogk::Dual : log scales array.\ndlogk::Dual : increment in log scales.\nzs::Dual : redshift array.\nchi::Dual : comoving distance array.\nz_of_chi::Dual : redshift of comoving distance array.\nchi_max::Dual : upper bound of comoving distance array.\nchi_LSS::Dual : comoving distance to suface of last scattering.\nDz::Dual : growth factor.\nPkLz0::Dual : interpolator of log primordial power spectrum over k-scales.\nPk::Dual : matter power spectrum.\n\nReturns:\n\nCosmoPar : cosmology parameters structure.\n\n\n\n\n\n","category":"type"},{"location":"api/#LimberJack.Ez","page":"API","title":"LimberJack.Ez","text":"Ez(cosmo::Cosmology, z)\n\nGiven a Cosmology instance, it returns the expansion rate (H(z)/H0). \n\nArguments:\n\ncosmo::Cosmology : cosmology structure\nz::Dual : redshift\n\nReturns:\n\nEz::Dual : expansion rate \n\n\n\n\n\n","category":"function"},{"location":"api/#LimberJack.Hmpc","page":"API","title":"LimberJack.Hmpc","text":"Hmpc(cosmo::Cosmology, z)\n\nGiven a Cosmology instance, it returns the expansion history (H(z)) in Mpc. \n\nArguments:\n\ncosmo::Cosmology : cosmology structure\nz::Dual : redshift\n\nReturns:\n\nHmpc::Dual : expansion rate \n\n\n\n\n\n","category":"function"},{"location":"api/#LimberJack.comoving_radial_distance","page":"API","title":"LimberJack.comoving_radial_distance","text":"comoving_radial_distance(cosmo::Cosmology, z)\n\nGiven a Cosmology instance, it returns the comoving radial distance. \n\nArguments:\n\ncosmo::Cosmology : cosmology structure\nz::Dual : redshift\n\nReturns:\n\nChi::Dual : comoving radial distance\n\n\n\n\n\n","category":"function"},{"location":"api/#LimberJack.growth_factor","page":"API","title":"LimberJack.growth_factor","text":"growth_factor(cosmo::Cosmology, z)\n\nGiven a Cosmology instance, it returns the growth factor (D(z) = log(δ)). \n\nArguments:\n\ncosmo::Cosmology : cosmological structure\nz::Dual : redshift\n\nReturns:\n\nDz::Dual : comoving radial distance\n\n\n\n\n\n","category":"function"},{"location":"api/#LimberJack.lin_Pk","page":"API","title":"LimberJack.lin_Pk","text":"lin_Pk(cosmo::Cosmology, k, z)\n\nGiven a Cosmology instance, it returns the linear matter power spectrum (P(k,z))\n\nArguments:\n\ncosmo::Cosmology : cosmology structure\nk::Dual : scale\nz::Dual : redshift\n\nReturns:\n\nPk::Dual : linear matter power spectrum\n\n\n\n\n\n","category":"function"},{"location":"api/#LimberJack.nonlin_Pk","page":"API","title":"LimberJack.nonlin_Pk","text":"nonlin_Pk(cosmo::Cosmology, k, z)\n\nGiven a Cosmology instance, it returns the non-linear matter power spectrum (P(k,z)) using the Halofit fitting formula (arXiv:astro-ph/0207664). \n\nArguments:\n\ncosmo::Cosmology : cosmology structure\nk::Dual : scale\nz::Dual : redshift\n\nReturns:\n\nPk::Dual : non-linear matter power spectrum\n\n\n\n\n\n","category":"function"},{"location":"api/#Emulator","page":"API","title":"Emulator","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"LimberJack.Emulator\nLimberJack.get_emulated_log_pk0","category":"page"},{"location":"api/#LimberJack.Emulator","page":"API","title":"LimberJack.Emulator","text":"Emulator()\n\nEmulator structure.\n\nArguments:\n\nalphas::Matrix : emulator's linear model for each k-scale\nhypers::Matrix : hyperparameters for each k-scale\ntrans_cosmos::Vector{Array} : transformed cosmological parameters\ntraining_karr::Vector{Float} : array of k-scales at which the emulator was trained\ninv_chol_cosmos::Matrix : inverse Cholesky decomposition of training matter power spectra\nmean_cosmos::Vector{Float} : mean training cosmology\nmean_log_Pks::Vector{Float} : mean of the log training matter power spectra\nstd_log_Pks::Vector{Float} : standard deviation of the log training matter power spectrum\n\nReturns:\n\nemulator::Structure : emulator structure.\n\n\n\n\n\n","category":"type"},{"location":"api/#LimberJack.get_emulated_log_pk0","page":"API","title":"LimberJack.get_emulated_log_pk0","text":"get_emulated_log_pk0(cosmo::CosmoPar)\n\nGiven a CosmoPar instance, emulates the value of the primordial matter power spectrum at the training k-scales.\n\nArguments:\n\nCosmoPar::Stucture : cosmological paramters structure\n\nReturns:\n\nkarr::Vector{Float} : array of training k-scales\nlog_pk0s::Vector{Dual} : array of emulated log matter power spectrum\n\n\n\n\n\n","category":"function"},{"location":"api/#Halofit","page":"API","title":"Halofit","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"LimberJack.get_PKnonlin","category":"page"},{"location":"api/#LimberJack.get_PKnonlin","page":"API","title":"LimberJack.get_PKnonlin","text":"get_PKnonlin(cosmo::CosmoPar, z, k, PkLz0, Dzs, cosmo_type::DataType)\n\nUses the Halofit (arXiv:astro-ph/0207664) model to calculate the non-linear matter power spectrum.\n\nArguments:\n\nCosmoPar::Stucture : cosmological paramters structure\nz::Vector{Dual} : array of redshifts\nk::Vector{Dual} : array of k-scales\nPkLz0::Interpolator : log primordial power spectrum interpolator as a function of log k-scale\nDzs::Vector{Dual} : growth factor evaluated at redshift array\ncosmo_type::Type : type of cosmological parameters\n\nReturns:\n\npk_NL(logk, z)::Interpolator : non-linear matter spectrum as a function of log k-scale and redshift\n\n\n\n\n\n","category":"function"},{"location":"api/#Spectra","page":"API","title":"Spectra","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"LimberJack.angularCℓs\nLimberJack.angularCℓ","category":"page"},{"location":"api/#LimberJack.angularCℓs","page":"API","title":"LimberJack.angularCℓs","text":"angularCℓs(cosmo::Cosmology, t1::Tracer, t2::Tracer, ℓs)\n\nReturns the angular power spectrum. \n\nArguments:\n\ncosmo::Cosmology : cosmology structure.\nt1::Tracer : tracer structure.\nt2::Tracer : tracer structure.\nℓs::Vector{Float} : multipole array.\n\nReturns:\n\nCℓs::Vector{Real} : angular power spectrum.\n\n\n\n\n\n","category":"function"},{"location":"api/#Tracers","page":"API","title":"Tracers","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"LimberJack.NumberCountsTracer\nLimberJack.WeakLensingTracer\nLimberJack.CMBLensingTracer","category":"page"},{"location":"api/#LimberJack.NumberCountsTracer","page":"API","title":"LimberJack.NumberCountsTracer","text":"NumberCountsTracer(warr, chis, wint, b, lpre)\n\nNumber counts tracer structure. \n\nArguments:\n\nwarr::Vector{Dual} : radial kernel array. \nchis::Vector{Dual} : comoving distances array of the radial kernel.\nwint::Interpolation : interpolation of the radial kernel over comoving distance.\nb::Dual: matter-galaxy bias.\nlpre::Int : prefactor mark.\n\nReturns:\n\nNumberCountsTracer::NumberCountsTracer : Number counts tracer structure.\n\n\n\n\n\n","category":"type"},{"location":"api/#LimberJack.WeakLensingTracer","page":"API","title":"LimberJack.WeakLensingTracer","text":"WeakLensingTracer(warr, chis, wint, b, lpre)\n\nWeak lensing tracer structure.  Arguments:\n\nwarr::Vector{Dual} : radial kernel array. \nchis::Vector{Dual} : comoving distances array of the radial kernel.\nwint::Interpolation : interpolation of the radial kernel over comoving distance.\nb::Dual: matter-galaxy bias.\n\nReturns:\n\nWeakLensingTracer::WeakLensingTracer : Weak lensing tracer structure.\n\n\n\n\n\n","category":"type"},{"location":"api/#LimberJack.CMBLensingTracer","page":"API","title":"LimberJack.CMBLensingTracer","text":"CMBLensingTracer(warr, chis, wint, lpre)\n\nCMB lensing tracer structure. \n\nArguments:\n\nwarr::Vector{Dual} : radial kernel array. \nchis::Vector{Dual} : comoving distances array of the radial kernel.\nwint::Interpolation : interpolation of the radial kernel over comoving distance.\nlpre::Int : prefactor mark.\n\nReturns:\n\nCMBLensingTracer::CMBLensingTracer : CMB lensing tracer structure.\n\n\n\n\n\n","category":"type"},{"location":"#LimberJack.jl","page":"Home","title":"LimberJack.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A differentiable cosmological code in Julia","category":"page"}]
}
